apiVersion: v1
kind: Service
metadata:
  name: redis
  labels:
    app: redis
spec:
  clusterIP: None
  selector:
    app: redis
  ports:
  - name: redis
    port: 6379
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis
  labels:
    app: redis
spec:
  # storageClassName: standard
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  labels:
    app: redis
spec:
  serviceName: redis
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      annotations:
        prometheus.io/port: "9121"
        prometheus.io/scrape: "true"
      labels:
        app: redis
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: cloud.google.com/gke-preemptible
                operator: DoesNotExist
      containers:
      - name: redis
        image: redis:5.0.4
        args:
        - "--databases 1"
        - "--maxmemory 50mb"
        - "--maxmemory-policy allkeys-lru"
        - "--appendonly yes"
        ports:
        - name: redis
          containerPort: 6379
        volumeMounts:
        - name: data
          mountPath: /data
        resources:
          requests:
            cpu: 10m
          limits:
            memory: 60Mi
      - name: exporter
        image: oliver006/redis_exporter:v0.34.1
        ports:
        - name: exporter
          containerPort: 9121
        resources:
          limits:
            cpu: 5m
            memory: 20Mi
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: redis
